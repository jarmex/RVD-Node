{"version":3,"sources":["../../src/logger.js"],"names":["LoggerClass","config","Object","assign","context","debug","info","error","message","printinfo","warn","console","printerror","debugContext","childContext","Error","deg","join","log","bind","getContext","debugcontext","printdebug","Logger","ch"],"mappings":"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","sourcesContent":["import debug from 'debug';\n\nclass LoggerClass {\n  constructor(config) {\n    this.config = Object.assign(\n      {},\n      {\n        context: 'ussd',\n        debug: true,\n        info: true,\n        error: true,\n      },\n      config || {},\n    );\n\n    this.debug = debug(this.config.context);\n    this.info = debug(this.config.context);\n    this.error = debug(this.config.context);\n  }\n\n  debug(message) {\n    if (this.config.debug) {\n      this.debug(message);\n    }\n  }\n\n  printinfo(message) {\n    if (this.config.info) {\n      this.info(message);\n    }\n  }\n\n  warn(message) {\n    console.warn(`(${this.config.context}) Warning: ${message}`); //eslint-disable-line\n  }\n\n  printerror(message) {\n    if (this.config.error) {\n      this.error(message);\n    }\n  }\n\n  debugContext(childContext) {\n    if (!childContext) {\n      throw new Error('No context supplied to debug');\n    }\n    const deg = debug([this.config.context, childContext].join(':'));\n    deg.log = console.log.bind(console); // eslint-disable-line\n    return deg;\n  }\n\n  /**\n   *print error using the debug module\n   *\n   * @param {string} childContext the child context.\n   * @returns an object for printing error, info and debug\n   * @memberof Logger\n   */\n  getContext(childContext) {\n    // if (!childContext) {\n    //   throw new Error('No context supplied to debug');\n    // }\n    const debugcontext = childContext ? `${childContext}:debug` : 'debug';\n    const printinfo = debug(\n      [this.config.context, childContext || 'info'].join(':'),\n    );\n    const printerror = debug(\n      [this.config.context, childContext || 'error'].join(':'),\n    );\n    const printdebug = debug([this.config.context, debugcontext].join(':'));\n\n    printdebug.log = console.log.bind(console); // eslint-disable-line\n    printinfo.log = console.info.bind(console); // eslint-disable-line\n    return {\n      printinfo,\n      printerror,\n      printdebug,\n      debug: printdebug,\n    };\n  }\n}\n\nexport default () => new LoggerClass();\n// eslint-disable-next-line\nexport const Logger = (ch) => new LoggerClass().getContext(ch);\nexport { LoggerClass };\n"],"file":"logger.js"}